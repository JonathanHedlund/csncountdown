{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanhedlund/Documents/Skola/Programmering/AFI/Projektet/csncountdown/src/Countdown.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Confetti from 'react-confetti';\nimport csnSong from './csnSong.mp3';\nimport kazoo from './kazoo.mp3';\nimport Sound from 'react-sound';\n\nclass Countdown extends Component {\n  constructor() {\n    super();\n    this.calcNextCSNDay();\n    this.calcCSNDay();\n    this.state = {\n      csnDay: \"\",\n      days: \"\",\n      nextCSNDay: 24,\n      daysOfMonth: \"\",\n      hours: 23 - new Date().getHours(),\n      minutes: 59 - new Date().getMinutes(),\n      seconds: 59 - new Date().getSeconds(),\n      dayText: \"Days\",\n      hourText: \"Hours\",\n      minuteText: \"Minutes\",\n      secondText: \"Seconds\",\n      csnToday: false,\n      songFinished: false\n    };\n    setInterval(() => {\n      this.isItCSN();\n\n      if (!this.state.csnToday) {\n        if (new Date().getDate() < this.state.csnDay + 1) {\n          this.setState(() => ({\n            days: this.state.csnDay - new Date().getDate()\n          }));\n        } else {\n          this.setState(() => ({\n            days: this.state.daysOfMonth - (new Date().getDate() - this.state.nextCSNDay)\n          }));\n        }\n\n        this.setState(() => ({\n          hours: 23 - new Date().getHours(),\n          minutes: 59 - new Date().getMinutes(),\n          seconds: 59 - new Date().getSeconds()\n        }));\n\n        if (this.state.days === 1) {\n          this.setState(() => ({\n            dayText: \"Day\"\n          }));\n        } else if (this.state.hours === 1) {\n          this.setState(() => ({\n            hourText: \"Hour\"\n          }));\n        } else if (this.state.minutes === 1) {\n          this.setState(() => ({\n            minuteText: \"Minute\"\n          }));\n        } else if (this.state.seconds === 1) {\n          this.setState(() => ({\n            secondText: \"Second\"\n          }));\n        } else {\n          this.setState(() => ({\n            dayText: \"Days\",\n            hourText: \"Hours\",\n            minuteText: \"Minutes\",\n            secondText: \"Seconds\"\n          }));\n        }\n      } else {\n        this.setState(() => ({\n          days: \"\",\n          hours: \"\",\n          minutes: \"\",\n          seconds: \"\",\n          dayText: \"It's CSN time!!\",\n          hourText: \"\",\n          minuteText: \"\",\n          secondText: \"\"\n        }));\n      }\n    }, 100);\n  }\n\n  isItCSN() {\n    if (this.state.csnDay + 1 === new Date().getDate()) {\n      this.setState(() => ({\n        csnToday: true\n      }));\n    } else {\n      this.setState(() => ({\n        csnToday: false\n      }));\n    }\n  } //Calculates which date CSN comes\n\n\n  calcCSNDay() {\n    let csnMonth = new Date().getMonth() + 1;\n    let currentYear = new Date().getFullYear();\n    let currentDay = new Date().getDate();\n    let csnDay = 24;\n    console.log(new Date().getMonth() + 1);\n    axios.get('https://api.dryg.net/dagar/v2.1/' + currentYear + '/' + csnMonth).then(response => {\n      // handle success\n      console.log(response.data.dagar.length);\n      console.log(response);\n      console.log(response);\n      console.log(currentDay);\n\n      while (\"Lördag\" === response.data.dagar[csnDay].veckodag || \"Söndag\" === response.data.dagar[csnDay].veckodag || response.data.dagar[csnDay][\"röd dag\"] === \"Ja\") {\n        csnDay--;\n      }\n\n      this.setState(() => ({\n        csnDay: csnDay,\n        daysOfMonth: response.data.dagar.length\n      }));\n      this.setState(() => ({\n        days: csnDay - currentDay\n      }));\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  calcNextCSNDay() {\n    let csnMonth = new Date().getMonth() + 2;\n    let currentYear = new Date().getFullYear();\n    let csnDay = 24;\n    console.log(new Date().getMonth() + 2);\n    axios.get('https://api.dryg.net/dagar/v2.1/' + currentYear + '/' + csnMonth).then(response => {\n      // handle success\n      console.log(response);\n\n      while (\"Lördag\" === response.data.dagar[csnDay].veckodag || \"Söndag\" === response.data.dagar[csnDay].veckodag || response.data.dagar[csnDay][\"röd dag\"] === \"Ja\") {\n        csnDay--;\n      }\n\n      this.setState(() => ({\n        nextCSNDay: csnDay,\n        days: this.state.daysOfMonth - (new Date().getDate() - csnDay)\n      }));\n      console.log(this.state.nextCSNDay);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  handlePlaySong() {\n    if (this.state.csnToday && !this.state.songFinished) {\n      return Sound.status.PLAYING;\n    } else {\n      return Sound.status.STOPPED;\n    }\n  }\n\n  handleSongFinishedPlaying() {\n    setInterval(() => {\n      this.setState(() => ({\n        songFinished: true\n      }));\n    }, 1000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, this.state.days + \" \" + this.state.dayText), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, this.state.hours + \" \" + this.state.hourText), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, this.state.minutes + \" \" + this.state.minuteText), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.state.seconds + \" \" + this.state.secondText), React.createElement(Confetti, {\n      numberOfPieces: \"300\",\n      run: this.state.csnToday,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(Sound, {\n      url: csnSong,\n      playStatus: this.handlePlaySong(),\n      onFinishedPlaying: this.handleSongFinishedPlaying(),\n      autoLoad: true,\n      loop: false,\n      volume: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/jonathanhedlund/Documents/Skola/Programmering/AFI/Projektet/csncountdown/src/Countdown.js"],"names":["React","Component","axios","Confetti","csnSong","kazoo","Sound","Countdown","constructor","calcNextCSNDay","calcCSNDay","state","csnDay","days","nextCSNDay","daysOfMonth","hours","Date","getHours","minutes","getMinutes","seconds","getSeconds","dayText","hourText","minuteText","secondText","csnToday","songFinished","setInterval","isItCSN","getDate","setState","csnMonth","getMonth","currentYear","getFullYear","currentDay","console","log","get","then","response","data","dagar","length","veckodag","catch","error","handlePlaySong","status","PLAYING","STOPPED","handleSongFinishedPlaying","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport Confetti from 'react-confetti'\nimport csnSong from './csnSong.mp3'\nimport kazoo from './kazoo.mp3'\nimport Sound from 'react-sound'\n\n\nclass Countdown extends Component {\n    constructor() {\n        super();\n        this.calcNextCSNDay();\n        this.calcCSNDay();\n        this.state = {\n            csnDay: \"\",\n            days: \"\",\n            nextCSNDay: 24,\n            daysOfMonth: \"\",\n            hours: 23 - (new Date().getHours()),\n            minutes: 59 - (new Date().getMinutes()),\n            seconds: 59 - (new Date().getSeconds()),\n            dayText: \"Days\",\n            hourText: \"Hours\",\n            minuteText: \"Minutes\",\n            secondText: \"Seconds\",\n            csnToday: false,\n            songFinished: false\n        };\n\n        setInterval(() => {\n            this.isItCSN()\n            if (!(this.state.csnToday)) {\n                if ((new Date().getDate() < this.state.csnDay + 1)) {\n                    this.setState(() => ({\n                        days: this.state.csnDay - new Date().getDate()\n                    }))\n                }\n                else {\n                    this.setState(() => ({\n                        days: this.state.daysOfMonth - (new Date().getDate() - this.state.nextCSNDay)\n                    }))\n                }\n                this.setState(() => ({\n                    hours: 23 - (new Date().getHours()),\n                    minutes: 59 - (new Date().getMinutes()),\n                    seconds: 59 - (new Date().getSeconds())\n                }))\n                if (this.state.days === 1) {\n                    this.setState(() => ({\n                        dayText: \"Day\"\n                    }))\n                }\n                else if (this.state.hours === 1) {\n                    this.setState(() => ({\n                        hourText: \"Hour\"\n                    }))\n                }\n                else if (this.state.minutes === 1) {\n                    this.setState(() => ({\n                        minuteText: \"Minute\"\n                    }))\n                }\n                else if (this.state.seconds === 1) {\n                    this.setState(() => ({\n                        secondText: \"Second\"\n                    }))\n                }\n                else {\n                    this.setState(() => ({\n                        dayText: \"Days\",\n                        hourText: \"Hours\",\n                        minuteText: \"Minutes\",\n                        secondText: \"Seconds\",\n                    }))\n                }\n            }\n            else {\n                this.setState(() => ({\n                    days: \"\",\n                    hours: \"\",\n                    minutes: \"\",\n                    seconds: \"\",\n                    dayText: \"It's CSN time!!\",\n                    hourText: \"\",\n                    minuteText: \"\",\n                    secondText: \"\",\n                }))\n            }\n        }, 100);\n    }\n\n    isItCSN() {\n        if ((this.state.csnDay + 1) === new Date().getDate()) {\n            this.setState(() => ({\n                csnToday: true\n            }))\n        } else {\n            this.setState(() => ({\n                csnToday: false\n            }))\n        }\n    }\n    //Calculates which date CSN comes\n    calcCSNDay() {\n        let csnMonth = new Date().getMonth() + 1;\n        let currentYear = new Date().getFullYear();\n        let currentDay = new Date().getDate();\n        let csnDay = 24;\n        console.log((new Date().getMonth()) + 1)\n        axios.get('https://api.dryg.net/dagar/v2.1/' + currentYear + '/' + csnMonth)\n            .then((response) => {\n                // handle success\n                console.log(response.data.dagar.length);\n                console.log(response);\n                console.log(response);\n                console.log(currentDay);\n                while ((\"Lördag\" === response.data.dagar[csnDay].veckodag) ||\n                    (\"Söndag\" === response.data.dagar[csnDay].veckodag) ||\n                    (response.data.dagar[csnDay][\"röd dag\"] === \"Ja\")) {\n                    csnDay--;\n                }\n                this.setState(() => ({\n                    csnDay: csnDay,\n                    daysOfMonth: response.data.dagar.length\n                }))\n                this.setState(() => ({\n                    days: csnDay - currentDay\n                }))\n\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n    }\n    calcNextCSNDay() {\n        let csnMonth = new Date().getMonth() + 2;\n        let currentYear = new Date().getFullYear();\n        let csnDay = 24;\n        console.log((new Date().getMonth()) + 2)\n        axios.get('https://api.dryg.net/dagar/v2.1/' + currentYear + '/' + csnMonth)\n            .then((response) => {\n                // handle success\n                console.log(response);\n                while ((\"Lördag\" === response.data.dagar[csnDay].veckodag) ||\n                    (\"Söndag\" === response.data.dagar[csnDay].veckodag) ||\n                    (response.data.dagar[csnDay][\"röd dag\"] === \"Ja\")) {\n                    csnDay--;\n                }\n                this.setState(() => ({\n                    nextCSNDay: csnDay,\n                    days: this.state.daysOfMonth - (new Date().getDate() - csnDay)\n                }))\n                console.log(this.state.nextCSNDay);\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n    }\n    handlePlaySong() {\n        if (this.state.csnToday && !this.state.songFinished) {\n            return Sound.status.PLAYING\n        }\n        else {\n            return Sound.status.STOPPED\n        }\n    }\n    handleSongFinishedPlaying() {\n        setInterval(() => {\n            this.setState(() => ({\n                songFinished: true\n            }))\n        }, 1000)\n    }\n    render() {\n        return (\n            <div>\n                <p>{this.state.days + \" \" + this.state.dayText}</p>\n                <p>{this.state.hours + \" \" + this.state.hourText}</p>\n                <p>{this.state.minutes + \" \" + this.state.minuteText}</p>\n                <p>{this.state.seconds + \" \" + this.state.secondText}</p>\n\n                <Confetti numberOfPieces=\"300\" run={this.state.csnToday} />\n\n                <Sound\n                    url={csnSong}\n                    playStatus={this.handlePlaySong()}\n                    onFinishedPlaying={this.handleSongFinishedPlaying()}\n                    autoLoad={true}\n                    loop={false}\n                    volume={50}\n                />\n\n            </div >\n        );\n    }\n}\n\nexport default Countdown"]},"metadata":{},"sourceType":"module"}