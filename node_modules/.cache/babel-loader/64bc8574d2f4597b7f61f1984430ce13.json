{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanhedlund/Documents/Skola/Programmering/AFI/Projektet/csncountdown/src/Countdown.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Countdown extends Component {\n  constructor() {\n    super();\n    this.calcCSNDay();\n    this.calcNextCSNDay();\n    this.state = {\n      csnDay: \"\",\n      days: \"\",\n      nextCSNDay: \"\",\n      hours: 23 - new Date().getHours(),\n      minutes: 59 - new Date().getMinutes(),\n      seconds: 59 - new Date().getSeconds(),\n      dayText: \"Days\",\n      hourText: \"Hours\",\n      minuteText: \"Minutes\",\n      secondText: \"Seconds\",\n      csnToday: false\n    }; //const csnDay = this.calcCSNDay();\n\n    setInterval(prevState => {\n      if (!this.state.csnToday) {\n        this.setState(() => ({\n          hours: 23 - new Date().getHours(),\n          minutes: 59 - new Date().getMinutes(),\n          seconds: 59 - new Date().getSeconds()\n        }));\n\n        if (this.state.days === 1) {\n          this.setState(() => ({\n            dayText: \"Day\"\n          }));\n        } else if (this.state.hours === 1) {\n          this.setState(() => ({\n            hourText: \"Hour\"\n          }));\n        } else if (this.state.minutes === 1) {\n          this.setState(() => ({\n            minuteText: \"Minute\"\n          }));\n        } else if (this.state.seconds === 1) {\n          this.setState(() => ({\n            secondText: \"Second\"\n          }));\n        } else {\n          this.setState(() => ({\n            dayText: \"Days\",\n            hourText: \"Hours\",\n            minuteText: \"Minutes\",\n            secondText: \"Seconds\"\n          }));\n        }\n      } else {\n        this.setState(() => ({\n          days: \"\",\n          hours: \"\",\n          minutes: \"\",\n          seconds: \"\",\n          dayText: \"It's CSN time!!\",\n          hourText: \"\",\n          minuteText: \"\",\n          secondText: \"\"\n        }));\n      }\n    }, 100);\n  }\n\n  isItCSN() {\n    console.log(this.state.csnDay);\n\n    if (this.state.csnDay === new Date().getDate() + 1) {\n      this.setState(() => ({\n        csnToday: true\n      }));\n    }\n\n    this.setState(() => ({\n      csnToday: false\n    }));\n  } //Calculates which date CSN comes\n\n\n  calcCSNDay() {\n    let csnMonth = new Date().getMonth() + 1;\n    let currentYear = new Date().getFullYear();\n    let currentDay = new Date().getDate();\n    let csnDay = 24;\n    console.log(new Date().getMonth() + 1);\n    axios.get('https://api.dryg.net/dagar/v2.1/' + currentYear + '/' + csnMonth).then(response => {\n      // handle success\n      console.log(response.data.dagar.length);\n      console.log(response);\n      console.log(response);\n      console.log(currentDay);\n\n      while (\"Lördag\" === response.data.dagar[csnDay].veckodag || \"Söndag\" === response.data.dagar[csnDay].veckodag || response.data.dagar[csnDay][\"röd dag\"] === \"Ja\") {\n        csnDay--;\n      }\n\n      this.setState(() => ({\n        csnDay: csnDay\n      }));\n\n      if (currentDay >= this.state.nextCSNDay) {\n        this.setState(() => ({\n          days: response.data.dagar.length - (currentDay - this.state.nextCSNDay)\n        }));\n      } else {\n        this.setState(() => ({\n          days: csnDay - currentDay\n        }));\n      }\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n\n    if (currentDay >= csnDay) {}\n  }\n\n  calcNextCSNDay() {\n    let csnMonth = new Date().getMonth() + 2;\n    let currentYear = new Date().getFullYear();\n    let csnDay = 24;\n    console.log(new Date().getMonth() + 2);\n    axios.get('https://api.dryg.net/dagar/v2.1/' + currentYear + '/' + csnMonth).then(response => {\n      // handle success\n      console.log(response);\n\n      while (\"Lördag\" === response.data.dagar[csnDay].veckodag || \"Söndag\" === response.data.dagar[csnDay].veckodag || response.data.dagar[csnDay][\"röd dag\"] === \"Ja\") {\n        csnDay--;\n      }\n\n      this.setState(() => ({\n        nextCSNDay: csnDay\n      }));\n      console.log(this.state.nextCSNDay);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \" \", this.state.days + \" \" + this.state.dayText, \"  \", this.state.hours + \" \" + this.state.hourText, \"  \", this.state.minutes + \" \" + this.state.minuteText, \" \", this.state.seconds + \" \" + this.state.secondText, \" \");\n  }\n\n}\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/jonathanhedlund/Documents/Skola/Programmering/AFI/Projektet/csncountdown/src/Countdown.js"],"names":["React","Component","axios","Countdown","constructor","calcCSNDay","calcNextCSNDay","state","csnDay","days","nextCSNDay","hours","Date","getHours","minutes","getMinutes","seconds","getSeconds","dayText","hourText","minuteText","secondText","csnToday","setInterval","prevState","setState","isItCSN","console","log","getDate","csnMonth","getMonth","currentYear","getFullYear","currentDay","get","then","response","data","dagar","length","veckodag","catch","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\n\n\nclass Countdown extends Component {\n    constructor() {\n        super();\n        this.calcCSNDay();\n        this.calcNextCSNDay();\n        this.state = {\n            csnDay: \"\",\n            days: \"\",\n            nextCSNDay: \"\",\n            hours: 23 - (new Date().getHours()),\n            minutes: 59 - (new Date().getMinutes()),\n            seconds: 59 - (new Date().getSeconds()),\n            dayText: \"Days\",\n            hourText: \"Hours\",\n            minuteText: \"Minutes\",\n            secondText: \"Seconds\",\n            csnToday: false\n        };\n        //const csnDay = this.calcCSNDay();\n        setInterval((prevState) => {\n            if (!this.state.csnToday) {\n                this.setState(() => ({\n\n                    hours: 23 - (new Date().getHours()),\n                    minutes: 59 - (new Date().getMinutes()),\n                    seconds: 59 - (new Date().getSeconds())\n                }))\n                if (this.state.days === 1) {\n                    this.setState(() => ({\n                        dayText: \"Day\"\n                    }))\n                }\n                else if (this.state.hours === 1) {\n                    this.setState(() => ({\n                        hourText: \"Hour\"\n                    }))\n                }\n                else if (this.state.minutes === 1) {\n                    this.setState(() => ({\n                        minuteText: \"Minute\"\n                    }))\n                }\n                else if (this.state.seconds === 1) {\n                    this.setState(() => ({\n                        secondText: \"Second\"\n                    }))\n                }\n                else {\n                    this.setState(() => ({\n                        dayText: \"Days\",\n                        hourText: \"Hours\",\n                        minuteText: \"Minutes\",\n                        secondText: \"Seconds\",\n                    }))\n                }\n            }\n            else {\n                this.setState(() => ({\n                    days: \"\",\n                    hours: \"\",\n                    minutes: \"\",\n                    seconds: \"\",\n                    dayText: \"It's CSN time!!\",\n                    hourText: \"\",\n                    minuteText: \"\",\n                    secondText: \"\",\n                }))\n            }\n        }, 100);\n\n    }\n    isItCSN() {\n        console.log(this.state.csnDay)\n        if ((this.state.csnDay) === new Date().getDate() + 1) {\n            this.setState(() => ({\n                csnToday: true\n            }))\n        }\n        this.setState(() => ({\n            csnToday: false\n        }))\n    }\n    //Calculates which date CSN comes\n    calcCSNDay() {\n        let csnMonth = new Date().getMonth() + 1;\n        let currentYear = new Date().getFullYear();\n        let currentDay = new Date().getDate();\n        let csnDay = 24;\n        console.log((new Date().getMonth()) + 1)\n        axios.get('https://api.dryg.net/dagar/v2.1/' + currentYear + '/' + csnMonth)\n            .then((response) => {\n                // handle success\n                console.log(response.data.dagar.length);\n                console.log(response);\n                console.log(response);\n                console.log(currentDay);\n                while ((\"Lördag\" === response.data.dagar[csnDay].veckodag) ||\n                    (\"Söndag\" === response.data.dagar[csnDay].veckodag) ||\n                    (response.data.dagar[csnDay][\"röd dag\"] === \"Ja\")) {\n                    csnDay--;\n                }\n                this.setState(() => ({\n                    csnDay: csnDay,\n                }))\n                if (currentDay >= this.state.nextCSNDay) {\n                    this.setState(() => ({\n                        days: response.data.dagar.length - (currentDay - this.state.nextCSNDay)\n                    }))\n                } else {\n                    this.setState(() => ({\n                        days: csnDay - currentDay\n                    }))\n                }\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n        if (currentDay >= csnDay) {\n\n        }\n    }\n    calcNextCSNDay() {\n        let csnMonth = new Date().getMonth() + 2;\n        let currentYear = new Date().getFullYear();\n        let csnDay = 24;\n        console.log((new Date().getMonth()) + 2)\n        axios.get('https://api.dryg.net/dagar/v2.1/' + currentYear + '/' + csnMonth)\n            .then((response) => {\n                // handle success\n                console.log(response);\n                while ((\"Lördag\" === response.data.dagar[csnDay].veckodag) ||\n                    (\"Söndag\" === response.data.dagar[csnDay].veckodag) ||\n                    (response.data.dagar[csnDay][\"röd dag\"] === \"Ja\")) {\n                    csnDay--;\n                }\n                this.setState(() => ({\n                    nextCSNDay: csnDay,\n                }))\n                console.log(this.state.nextCSNDay);\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n\n\n    }\n    render() {\n        return (\n            <p> {this.state.days + \" \" + this.state.dayText}  {this.state.hours + \" \"\n                + this.state.hourText}  {this.state.minutes + \" \"\n                    + this.state.minuteText} {this.state.seconds + \" \" + this.state.secondText} </p>\n        );\n    }\n}\n\nexport default Countdown"]},"metadata":{},"sourceType":"module"}