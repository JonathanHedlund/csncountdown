{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanhedlund/Documents/Skola/Programmering/AFI/Projektet/csncountdown/src/Countdown.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Countdown extends Component {\n  constructor() {\n    super();\n    this.calcCSNDay();\n    this.state = {\n      csnDay: \"\",\n      days: \"\",\n      hours: 23 - new Date().getHours(),\n      minutes: 59 - new Date().getMinutes(),\n      seconds: 59 - new Date().getSeconds(),\n      dayText: \"Days\",\n      hourText: \"Hours\",\n      minuteText: \"Minutes\",\n      secondText: \"Seconds\"\n    }; //const csnDay = this.calcCSNDay();\n\n    setInterval(prevState => {\n      if (!this.isItCSN()) {\n        this.setState(() => ({\n          days: this.state.csnDay - new Date().getDate(),\n          hours: 23 - new Date().getHours(),\n          minutes: 59 - new Date().getMinutes(),\n          seconds: 59 - new Date().getSeconds()\n        }));\n\n        if (this.state.days === 1) {\n          this.setState(() => ({\n            dayText: \"Day\"\n          }));\n        } else if (this.state.hours === 1) {\n          this.setState(() => ({\n            hourText: \"Hour\"\n          }));\n        } else if (this.state.minutes === 1) {\n          this.setState(() => ({\n            minuteText: \"Minute\"\n          }));\n        } else if (this.state.seconds === 1) {\n          this.setState(() => ({\n            secondText: \"Second\"\n          }));\n        } else {\n          this.setState(() => ({\n            dayText: \"Days\",\n            hourText: \"Hours\",\n            minuteText: \"Minutes\",\n            secondText: \"Seconds\"\n          }));\n        }\n      } else {\n        this.setState(() => ({\n          days: \"\",\n          hours: \"\",\n          minutes: \"\",\n          seconds: \"\",\n          dayText: \"It's CSN time!!\",\n          hourText: \"\",\n          minuteText: \"\",\n          secondText: \"\"\n        }));\n      }\n    }, 150);\n  }\n\n  isItCSN() {\n    console.log(\"hej\");\n\n    if (this.state.csnDay === new Date().getDate() + 1) {\n      return true;\n    }\n\n    return false;\n  } //Calculates which date CSN comes\n\n\n  calcCSNDay() {\n    let csnMonth = new Date().getMonth() + 1;\n    let currentYear = new Date().getFullYear();\n    let currentDay = \"\";\n    let csnDay = 24;\n    console.log(new Date().getMonth() + 1);\n    axios.get('https://api.dryg.net/dagar/v2.1/' + currentYear + '/' + csnMonth).then(response => {\n      // handle success\n      console.log(currentDay);\n      console.log(response);\n\n      while (\"Lördag\" === response.data.dagar[csnDay].veckodag || \"Söndag\" === response.data.dagar[csnDay].veckodag || response.data.dagar[csnDay][\"röd dag\"] === \"Ja\") {\n        csnDay--;\n      }\n\n      this.setState(() => ({\n        csnDay: csnDay\n      }));\n      return csnDay;\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \" \", this.state.days + \" \" + this.state.dayText, \"  \", this.state.hours + \" \" + this.state.hourText, \"  \", this.state.minutes + \" \" + this.state.minuteText, \" \", this.state.seconds + \" \" + this.state.secondText, \" \");\n  }\n\n}\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/jonathanhedlund/Documents/Skola/Programmering/AFI/Projektet/csncountdown/src/Countdown.js"],"names":["React","Component","axios","Countdown","constructor","calcCSNDay","state","csnDay","days","hours","Date","getHours","minutes","getMinutes","seconds","getSeconds","dayText","hourText","minuteText","secondText","setInterval","prevState","isItCSN","setState","getDate","console","log","csnMonth","getMonth","currentYear","getFullYear","currentDay","get","then","response","data","dagar","veckodag","catch","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\n\n\nclass Countdown extends Component {\n    constructor() {\n        super();\n        this.calcCSNDay();\n        this.state = {\n            csnDay: \"\",\n            days: \"\",\n            hours: 23 - (new Date().getHours()),\n            minutes: 59 - (new Date().getMinutes()),\n            seconds: 59 - (new Date().getSeconds()),\n            dayText: \"Days\",\n            hourText: \"Hours\",\n            minuteText: \"Minutes\",\n            secondText: \"Seconds\",\n        };\n        //const csnDay = this.calcCSNDay();\n        setInterval((prevState) => {\n            if (!this.isItCSN()) {\n                this.setState(() => ({\n                    days: this.state.csnDay - (new Date().getDate()),\n                    hours: 23 - (new Date().getHours()),\n                    minutes: 59 - (new Date().getMinutes()),\n                    seconds: 59 - (new Date().getSeconds())\n                }))\n                if (this.state.days === 1) {\n                    this.setState(() => ({\n                        dayText: \"Day\"\n                    }))\n                }\n                else if (this.state.hours === 1) {\n                    this.setState(() => ({\n                        hourText: \"Hour\"\n                    }))\n                }\n                else if (this.state.minutes === 1) {\n                    this.setState(() => ({\n                        minuteText: \"Minute\"\n                    }))\n                }\n                else if (this.state.seconds === 1) {\n                    this.setState(() => ({\n                        secondText: \"Second\"\n                    }))\n                }\n                else {\n                    this.setState(() => ({\n                        dayText: \"Days\",\n                        hourText: \"Hours\",\n                        minuteText: \"Minutes\",\n                        secondText: \"Seconds\",\n                    }))\n                }\n            }\n            else {\n                this.setState(() => ({\n                    days: \"\",\n                    hours: \"\",\n                    minutes: \"\",\n                    seconds: \"\",\n                    dayText: \"It's CSN time!!\",\n                    hourText: \"\",\n                    minuteText: \"\",\n                    secondText: \"\",\n                }))\n\n            }\n        }, 150);\n\n    }\n    isItCSN() {\n        console.log(\"hej\")\n        if ((this.state.csnDay) === new Date().getDate() + 1) {\n            return true;\n        }\n        return false;\n    }\n    //Calculates which date CSN comes\n    calcCSNDay() {\n        let csnMonth = new Date().getMonth() + 1;\n        let currentYear = new Date().getFullYear();\n        let currentDay = \"\";\n        let csnDay = 24;\n        console.log((new Date().getMonth()) + 1)\n        axios.get('https://api.dryg.net/dagar/v2.1/' + currentYear + '/' + csnMonth)\n            .then((response) => {\n                // handle success\n                console.log(currentDay);\n                console.log(response);\n                while ((\"Lördag\" === response.data.dagar[csnDay].veckodag) ||\n                    (\"Söndag\" === response.data.dagar[csnDay].veckodag) ||\n                    (response.data.dagar[csnDay][\"röd dag\"] === \"Ja\")) {\n                    csnDay--;\n                }\n                this.setState(() => ({\n                    csnDay: csnDay\n                }))\n                return csnDay;\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n\n    }\n    render() {\n        return (\n            <p> {this.state.days + \" \" + this.state.dayText}  {this.state.hours + \" \"\n                + this.state.hourText}  {this.state.minutes + \" \"\n                    + this.state.minuteText} {this.state.seconds + \" \" + this.state.secondText} </p>\n        );\n    }\n}\n\nexport default Countdown"]},"metadata":{},"sourceType":"module"}