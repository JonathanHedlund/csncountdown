{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanhedlund/Documents/Skola/Programmering/AFI/Projektet/csncountdown/src/Money.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Money extends Component {\n  constructor() {\n    super();\n    this.state = {\n      money: \"8 007\",\n      support: \"2 478\"\n    };\n  }\n\n  calcCSNDay() {\n    let csnMonth = new Date().getMonth() + 1;\n    let currentYear = new Date().getFullYear();\n    let currentDay = new Date().getDate();\n    let csnDay = 24;\n    console.log(new Date().getMonth() + 1);\n    axios.get('https://api.dryg.net/dagar/v2.1/' + currentYear + '/' + csnMonth).then(response => {\n      // handle success\n      console.log(response.data.dagar.length);\n      console.log(response);\n      console.log(response);\n      console.log(currentDay);\n\n      while (\"Lördag\" === response.data.dagar[csnDay].veckodag || \"Söndag\" === response.data.dagar[csnDay].veckodag || response.data.dagar[csnDay][\"röd dag\"] === \"Ja\") {\n        csnDay--;\n      }\n\n      this.setState(() => ({\n        csnDay: csnDay,\n        daysOfMonth: response.data.dagar.length\n      }));\n      this.setState(() => ({\n        days: csnDay - currentDay\n      }));\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n\n    if (currentDay >= csnDay) {}\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Studying full time (100%) will give you \", React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.money), \" SEK, where \", React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.support), \" SEK is financial support.\"));\n  }\n\n}\n\nexport default Money;","map":{"version":3,"sources":["/Users/jonathanhedlund/Documents/Skola/Programmering/AFI/Projektet/csncountdown/src/Money.js"],"names":["React","Component","axios","Money","constructor","state","money","support","calcCSNDay","csnMonth","Date","getMonth","currentYear","getFullYear","currentDay","getDate","csnDay","console","log","get","then","response","data","dagar","length","veckodag","setState","daysOfMonth","days","catch","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC1BG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,OADE;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH;;AACDC,EAAAA,UAAU,GAAG;AACT,QAAIC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,QAAX,KAAwB,CAAvC;AACA,QAAIC,WAAW,GAAG,IAAIF,IAAJ,GAAWG,WAAX,EAAlB;AACA,QAAIC,UAAU,GAAG,IAAIJ,IAAJ,GAAWK,OAAX,EAAjB;AACA,QAAIC,MAAM,GAAG,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,IAAIR,IAAJ,GAAWC,QAAX,EAAD,GAA0B,CAAtC;AACAT,IAAAA,KAAK,CAACiB,GAAN,CAAU,qCAAqCP,WAArC,GAAmD,GAAnD,GAAyDH,QAAnE,EACKW,IADL,CACWC,QAAD,IAAc;AAChB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,MAAhC;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;;AACA,aAAQ,aAAaO,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBP,MAApB,EAA4BS,QAA1C,IACF,aAAaJ,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBP,MAApB,EAA4BS,QADvC,IAEFJ,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBP,MAApB,EAA4B,SAA5B,MAA2C,IAFhD,EAEuD;AACnDA,QAAAA,MAAM;AACT;;AACD,WAAKU,QAAL,CAAc,OAAO;AACjBV,QAAAA,MAAM,EAAEA,MADS;AAEjBW,QAAAA,WAAW,EAAEN,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC;AAFhB,OAAP,CAAd;AAIA,WAAKE,QAAL,CAAc,OAAO;AACjBE,QAAAA,IAAI,EAAEZ,MAAM,GAAGF;AADE,OAAP,CAAd;AAIH,KApBL,EAqBKe,KArBL,CAqBW,UAAUC,KAAV,EAAiB;AACpB;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACH,KAxBL;;AAyBA,QAAIhB,UAAU,IAAIE,MAAlB,EAA0B,CAEzB;AACJ;;AACDe,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAK1B,KAAL,CAAWC,KAAhB,CAA3C,kBAAkF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKD,KAAL,CAAWE,OAAhB,CAAlF,+BADJ,CADJ;AAMH;;AAlDyB;;AAqD9B,eAAeJ,KAAf","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nclass Money extends Component {\n    constructor() {\n        super();\n        this.state = {\n            money: \"8 007\",\n            support: \"2 478\"\n        }\n    }\n    calcCSNDay() {\n        let csnMonth = new Date().getMonth() + 1;\n        let currentYear = new Date().getFullYear();\n        let currentDay = new Date().getDate();\n        let csnDay = 24;\n        console.log((new Date().getMonth()) + 1)\n        axios.get('https://api.dryg.net/dagar/v2.1/' + currentYear + '/' + csnMonth)\n            .then((response) => {\n                // handle success\n                console.log(response.data.dagar.length);\n                console.log(response);\n                console.log(response);\n                console.log(currentDay);\n                while ((\"Lördag\" === response.data.dagar[csnDay].veckodag) ||\n                    (\"Söndag\" === response.data.dagar[csnDay].veckodag) ||\n                    (response.data.dagar[csnDay][\"röd dag\"] === \"Ja\")) {\n                    csnDay--;\n                }\n                this.setState(() => ({\n                    csnDay: csnDay,\n                    daysOfMonth: response.data.dagar.length\n                }))\n                this.setState(() => ({\n                    days: csnDay - currentDay\n                }))\n\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n        if (currentDay >= csnDay) {\n\n        }\n    }\n    render() {\n        return (\n            <div>\n                <p>Studying full time (100%) will give you <em>{this.state.money}</em> SEK, where <em>{this.state.support}</em> SEK is financial support.</p>\n            </div>\n        )\n\n    }\n}\n\nexport default Money"]},"metadata":{},"sourceType":"module"}